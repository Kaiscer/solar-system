name: Solar System System Workflow

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'

jobs:
    unit-testing:
        name: Unit Testing
        services:
            mongo-db:
                image: siddharth67/mongo-db:non-prod
                ports:
                    - 27017:27017
        env:
          MONGO_URI: 'mongodb://localhost:27017/superData'
          MONGO_USERNAME: non-prod-user
          MONGO_PASSWORD: non-prod-password       
        strategy:
            matrix:
                node_version: [18, 20]
                operating_system: [ubuntu-latest]
                exclude:
                    - node_version: 18
                      operating_system: macos-latest
        runs-on: ${{ matrix.operating_system }}
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4
            

            - name: Setup Node.js - ${{ matrix.node_version }}
              uses: actions/setup-node@v4
              with:
                node-version: ${{ matrix.node_version }}
            
            - name: Cache NPM dependencies
              uses: actions/cache@v4
              with:
                path: node_modules
                key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}
                restore-keys: |
                  ${{ runner.os }}-node-modules-

            - name: Install Dependencies
              run: npm install

            - name: Run Unit Tests
              run: npm test
                
            - name: Upload Test Results
              uses: actions/upload-artifact@v4
              with:
                name: Mocha-Test-Results-${{ matrix.node_version }}-${{ matrix.operating_system }}
                path: test-results.xml
                retention-days: 1

    code-coverage:
        name: Code Coverage
        container:
            image: node:18
            options:
              --name mongo-db
        env:
          MONGO_URI: 'mongodb://mongo-db:27017/superData'
          MONGO_USERNAME: non-prod-user
          MONGO_PASSWORD: non-prod-password
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4

            # - name: Setup Node.js
            #   uses: actions/setup-node@v4
            #   with:
            #     node-version: 18

            - name: Install Dependencies
              run: npm install

            - name: Run Code Coverage
              continue-on-error: true
              run: npm run coverage

            - name: Upload Code Coverage
              uses: actions/upload-artifact@v4
              with:
                name: Code-Coverage-Results
                path: coverage
                retention-days: 1

    docker:
       name: Containerize Application
       needs: [unit-testing, code-coverage]
       permissions:
            contents: read
            packages: write
       runs-on: ubuntu-latest
       steps:
            - name: Checkout Repository
              uses: actions/checkout@v4

            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                username: ${{ vars.DOCKER_USERNAME }}
                password: ${{ secrets.DOCKER_PASSWORD }}

            - name: GHCR Login
              uses: docker/login-action@v3
              with:
                registry: ghcr.io
                username: ${{ github.repository_owner }}
                password: ${{ secrets.GITHUB_TOKEN }}
            
            - name: Docker Build For Testing
              uses: docker/build-push-action@v6
              with:
                context: .
                push: false
                tags: ${{ vars.DOCKER_USERNAME }}/solar-system:${{ github.sha }}

            - name: Docker Image Testing
              run: |
                docker images
                docker run --name solar-system-app -d \
                  -p 3000:3000 \
                  -e MONGO_URI=$MONGO_URI \
                  -e MONGO_USERNAME=$MONGO_USERNAME \
                  -e MONGO_PASSWORD=$MONGO_PASSWORD \
                  ${{ vars.DOCKER_USERNAME }}/solar-system:${{ github.sha }}
                docker ps -a
            
                IP=$(docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' solar-system-app)
                echo "IP Address of the Docker Container: $IP"
                echo "IP_ADDRESS=$IP" >> $GITHUB_ENV
            
                echo "Testing the Application"
                sleep 10 
                echo "wget output:"
                wget -q -O - http://$IP:3000/live
                echo "grep output:"
                wget -q -O - http://$IP:3000/live | grep live

            - name: Multiple Push GHCR and Docker Hub
              uses: docker/build-push-action@v6
              with:
                context: .
                push: true
                tags: |
                   ${{ vars.DOCKER_USERNAME }}/solar-system:${{ github.sha }}
                    ghcr.io/${{ github.repository_owner }}/solar-system:${{ github.sha }}
                